/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import controller.UsuarioController;
import controllerJuegos.InfoVideoJuegos;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.io.File;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Map;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

public class PerfilAdmin extends javax.swing.JFrame {

    private final UsuarioController USUARIO = new UsuarioController();
    private final InfoVideoJuegos JUEGO = new InfoVideoJuegos();
    FondoPanel6 fondo = new FondoPanel6();
    private BibliotecaGeneral BG;
    
    public PerfilAdmin() {
        setMinimumSize(new Dimension(1000, 600)); // Ajusta el tamaño según tu imagen de fondo
        this.setContentPane(fondo);
        initComponents();
        this.setLocationRelativeTo(null);
        obtenerModeloTabla();
    }
    
    
    private void eliminarJUEGO(){
        int seleccion = JOptionPane.showOptionDialog(
        this,
        "¿Esta seguro de querer eliminar el juego?",
        "Eliminar juego",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        null,
        JOptionPane.WARNING_MESSAGE);
        
        if (seleccion == JOptionPane.YES_OPTION) {
        
        String titulo =  jTEliminar.getText();
        
        if(!titulo.isEmpty()){
            JOptionPane.showMessageDialog(null, JUEGO.eliminarJuego(titulo),
                        "ELIMINADO", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese el nombre del juego",
                        "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        } else {
            JOptionPane.showMessageDialog(this, "No se elimino ningun juego", 
                                         "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void eliminarUSER(){
        int seleccion = JOptionPane.showOptionDialog(
        this,
        "¿Esta seguro de querer eliminar el usuario?",
        "Eliminar usuaario",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        null,
        JOptionPane.WARNING_MESSAGE);
        String nombreUsuario =  jTEliminarUser.getText();
        
        if (seleccion == JOptionPane.YES_OPTION) {
        
        if(!nombreUsuario.isEmpty()){
            JOptionPane.showMessageDialog(null, USUARIO.eliminarUsuario(nombreUsuario),
                        "ELIMINADO", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            JOptionPane.showMessageDialog(null, "Ingrese el usuario",
                        "ADVERTENCIA", JOptionPane.WARNING_MESSAGE);
        }
        } else {
            JOptionPane.showMessageDialog(this, "No se elimino ningun usuario", 
                                         "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }
    
    private void obtenerModeloTabla(){
        DefaultTableModel modelo = (DefaultTableModel) jTable1.getModel();
        modelo.setRowCount(0);
        
        ArrayList<String[]> listaUsuario = USUARIO.mostrarUsuarioTabla();
        System.out.print("LISTA USUARIOS: " + listaUsuario.size());
        for(String[] fila : listaUsuario){
            System.out.print("LISTA USUARIOS2: " + Arrays.toString(fila));
             modelo.addRow(fila);
        }
        
        jTable1.setBackground(Color.DARK_GRAY);
        jTable1.setForeground(Color.WHITE);
        
        modelo.fireTableDataChanged();
        jTable1.revalidate();
        jTable1.repaint();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jBAgregar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jBObtenerJuego = new javax.swing.JButton();
        jBEliminarJ = new javax.swing.JButton();
        jTEliminar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jBEliminarUser = new javax.swing.JButton();
        jTEliminarUser = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel2.setBackground(java.awt.Color.darkGray);
        jPanel2.setForeground(java.awt.Color.darkGray);
        jPanel2.setPreferredSize(new java.awt.Dimension(1050, 550));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 24)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("PERFIL ADMINISTRADOR");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 260, 30));

        jBAgregar.setBackground(new java.awt.Color(103, 22, 199));
        jBAgregar.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jBAgregar.setForeground(java.awt.Color.white);
        jBAgregar.setText("Agregar");
        jBAgregar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jBAgregar.setFocusable(false);
        jBAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        jBAgregar.setVerifyInputWhenFocusTarget(false);
        jBAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });
        jPanel2.add(jBAgregar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, 100, 30));

        jLabel2.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 20)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("GESTIONAR VIDEOJUEGOS");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        jBObtenerJuego.setBackground(new java.awt.Color(103, 22, 199));
        jBObtenerJuego.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jBObtenerJuego.setForeground(java.awt.Color.white);
        jBObtenerJuego.setText("Actualizar");
        jBObtenerJuego.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jBObtenerJuego.setFocusable(false);
        jBObtenerJuego.setVerifyInputWhenFocusTarget(false);
        jBObtenerJuego.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBObtenerJuegoActionPerformed(evt);
            }
        });
        jPanel2.add(jBObtenerJuego, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 150, 100, 30));

        jBEliminarJ.setBackground(new java.awt.Color(103, 22, 199));
        jBEliminarJ.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jBEliminarJ.setForeground(java.awt.Color.white);
        jBEliminarJ.setText("Eliminar");
        jBEliminarJ.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jBEliminarJ.setFocusable(false);
        jBEliminarJ.setVerifyInputWhenFocusTarget(false);
        jBEliminarJ.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarJActionPerformed(evt);
            }
        });
        jPanel2.add(jBEliminarJ, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 270, 100, 30));

        jTEliminar.setBackground(new java.awt.Color(51, 51, 51));
        jTEliminar.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jTEliminar.setForeground(java.awt.Color.white);
        jTEliminar.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(108, 56, 169), 1, true), new javax.swing.border.LineBorder(new java.awt.Color(108, 56, 169), 1, true)));
        jTEliminar.setCaretColor(new java.awt.Color(255, 255, 255));
        jTEliminar.setDisabledTextColor(new java.awt.Color(70, 73, 75));
        jTEliminar.setSelectionColor(new java.awt.Color(153, 0, 255));
        jPanel2.add(jTEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 320, 30));

        jLabel3.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("ELIMINAR USUARIO");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 370, -1, -1));

        jLabel4.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("AGREGAR JUEGO");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, 100, -1));

        jLabel5.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("ACTUALIZAR JUEGO");
        jPanel2.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 130, 110, -1));

        jTable1.setBackground(java.awt.Color.gray);
        jTable1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 16)); // NOI18N
        jTable1.setForeground(java.awt.Color.darkGray);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "USUARIO", "CORREO"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setGridColor(java.awt.Color.white);
        jTable1.setSelectionBackground(new java.awt.Color(102, 0, 153));
        jTable1.setSelectionForeground(java.awt.Color.white);
        jTable1.getTableHeader().setResizingAllowed(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
        }

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 50, 670, 490));

        jLabel6.setFont(new java.awt.Font("Yu Gothic Light", 0, 20)); // NOI18N
        jLabel6.setForeground(java.awt.Color.white);
        jLabel6.setText("GESTIONAR USUARIOS");
        jPanel2.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, -1, -1));

        jLabel7.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 12)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("ELIMINAR JUEGO");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 210, -1, -1));

        jBEliminarUser.setBackground(new java.awt.Color(103, 22, 199));
        jBEliminarUser.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jBEliminarUser.setForeground(java.awt.Color.white);
        jBEliminarUser.setText("Eliminar");
        jBEliminarUser.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jBEliminarUser.setFocusable(false);
        jBEliminarUser.setVerifyInputWhenFocusTarget(false);
        jBEliminarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEliminarUserActionPerformed(evt);
            }
        });
        jPanel2.add(jBEliminarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 440, 100, 30));

        jTEliminarUser.setBackground(new java.awt.Color(51, 51, 51));
        jTEliminarUser.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jTEliminarUser.setForeground(java.awt.Color.white);
        jTEliminarUser.setBorder(javax.swing.BorderFactory.createCompoundBorder(new javax.swing.border.LineBorder(new java.awt.Color(108, 56, 169), 1, true), new javax.swing.border.LineBorder(new java.awt.Color(108, 56, 169), 1, true)));
        jTEliminarUser.setCaretColor(new java.awt.Color(255, 255, 255));
        jTEliminarUser.setDisabledTextColor(new java.awt.Color(70, 73, 75));
        jTEliminarUser.setSelectionColor(new java.awt.Color(153, 0, 255));
        jPanel2.add(jTEliminarUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 320, 30));

        jButton1.setBackground(new java.awt.Color(103, 22, 199));
        jButton1.setFont(new java.awt.Font("Yu Gothic UI Light", 0, 14)); // NOI18N
        jButton1.setForeground(java.awt.Color.white);
        jButton1.setText("Cerrar sesión");
        jButton1.setToolTipText("");
        jButton1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4), javax.swing.BorderFactory.createEmptyBorder(4, 4, 4, 4)));
        jButton1.setFocusable(false);
        jButton1.setVerifyInputWhenFocusTarget(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 500, 100, -1));

        getContentPane().add(jPanel2, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        GameAgregar abrir = new GameAgregar();
        if(this.getExtendedState() == PerfilAdmin.MAXIMIZED_BOTH){
            abrir.setExtendedState(PerfilAdmin.MAXIMIZED_BOTH);
        }
        
        abrir.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBAgregarActionPerformed

    
    
    private void jBEliminarJActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarJActionPerformed
        eliminarJUEGO();
    }//GEN-LAST:event_jBEliminarJActionPerformed

    private void jBEliminarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEliminarUserActionPerformed
        eliminarUSER();
    }//GEN-LAST:event_jBEliminarUserActionPerformed

    private void jBObtenerJuegoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBObtenerJuegoActionPerformed
        String tituloOriginal = JOptionPane.showInputDialog(null, "Ingrese el título del juego", "Juego a editar");
    
    if (tituloOriginal == null || tituloOriginal.trim().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Es obligatorio llenar este espacio", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    Map<String, Object> datosJuego = JUEGO.leerDatosJuego(tituloOriginal);
    System.out.println("Datos recuperados: " + datosJuego);
    
    if (datosJuego.get("TITULO") != null && !datosJuego.get("TITULO").equals("")) {
        // cargar la  ventana para actualizar
        GameActualizar abrir = new GameActualizar();
        
        
        abrir.setTituloOriginal(tituloOriginal);
        
        // Pasar datos juego a la nueva ventana
        abrir.pasarDatos(datosJuego, tituloOriginal);
        
        if (this.getExtendedState() == PerfilAdmin.MAXIMIZED_BOTH) {
            abrir.setExtendedState(PerfilAdmin.MAXIMIZED_BOTH);
        }
        
        abrir.setVisible(true);
        this.setVisible(false);
    } else {
        JOptionPane.showMessageDialog(null, "Juego inexistente", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jBObtenerJuegoActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       int seleccion = JOptionPane.showOptionDialog(
        this,
        "¿Esta seguro de querer eliminar el juego?",
        "Eliminar juego",
        JOptionPane.YES_NO_OPTION,
        JOptionPane.QUESTION_MESSAGE,
        null,
        null,
        JOptionPane.WARNING_MESSAGE);
       
        if (seleccion == JOptionPane.YES_OPTION) {
       
        Inicio abrir = new Inicio();
        
        if(this.getExtendedState() == Inicio.MAXIMIZED_BOTH){
            abrir.setExtendedState(Inicio.MAXIMIZED_BOTH);
        }
        
        abrir.setVisible(true);
        this.setVisible(false);
        } else {
            JOptionPane.showMessageDialog(this, "Usted sigue en sesión", 
                                         "Información", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBEliminarJ;
    private javax.swing.JButton jBEliminarUser;
    private javax.swing.JButton jBObtenerJuego;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTEliminar;
    private javax.swing.JTextField jTEliminarUser;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
class FondoPanel6 extends JPanel
    {
        private Image imagen;
        
        @Override
        public void paint(Graphics g)
        {
            imagen = new ImageIcon(getClass().getResource("/Repositorio/FondoGeneral.png")).getImage();
            
            g.drawImage(imagen,0, 0, getWidth(), getHeight(),this);
            
            setOpaque(false);
            
            super.paint(g);
        }
    }

